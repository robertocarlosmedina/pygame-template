__author__ = "Roberto Medina"
__copyright__ = "Copyright 2021, Roberto Carlos Medina"
__version__ = "0.0.1"
__maintainer__ = "Roberto Medina"
__email__ = "robertocarlosmedina.dev@gmail.com "
__status__ = "Production"

"""
    This is the class where all the game loop is controlled, and where all the action are
    controlled. And also all the cubes generated by the Cube class are controlled by here.
"""

from typing import Literal
import pygame
from src.support.font import Game_fonts as fonts
from src.support.colors import Game_color as color
from src.support.auxiliar_functions import write_from_file
from src.support.buttons import horizontalButtonDisplay
from src.support.input_boxes import draw_input_boxes

class Game_loop:
    
    game_events: pygame.event        # Hold the current games events
    mouse_position: tuple            # To store and refresh the mouse position
    
    def __init__(self, game_obj: object) -> None:
        self.game_obj = game_obj
        self.quit_confirmation_buttons = ["Win", "Lose"]
        self.inputBoxs = {"Your Name": ["", False]}
        self.button_clicked = ""
        self.box_dim = {
            "x":100,
            "y":40
        }
        self.button_start_position = {
            "x":int((self.game_obj.screen_size[0] / 2) - (self.box_dim["x"] * 2 + 20) / 2),
            "y":int((self.game_obj.screen_size[1] / 2) - (self.box_dim["y"] * 2) / 2) + 20
        }

    def input_boxes_control(self) -> None:
        self.inputBoxs = draw_input_boxes(
            self.game_obj.screen, 
            self.inputBoxs,
            20, 
            self.game_obj.game_events,
            self.mouse_position,
            130,
            int(self.game_obj.screen_size[0]/2-125),
            (250,40),
            70
        )

    def game_over(self) -> Literal["game_over"]:
        write_from_file("./data/end_game_values.txt", "w","string example data to bee displayed in game over")
        
        self.game_obj.current_link = "game_over"

    def simple_game_introduction(self) -> None:
        self.button_clicked = horizontalButtonDisplay(
            screen = self.game_obj.screen,
            buttons = self.quit_confirmation_buttons,
            start_position = {
                "x": self.button_start_position["x"],
                "y": self.button_start_position["y"]
            },
            box_dim = self.box_dim,
            mouse_pos = self.mouse_position,
            font = fonts.montserrat_size_16.value,
            button_clicked = self.button_clicked
        )

    def run_link(self) -> None:
        change_page_by_action = change_page_by_event = False

        while True:
            self.game_obj.screen_fill_bg()

            self.mouse_position = pygame.mouse.get_pos()

            # return self.game_over(self.ttt.verificaGanhador())
            self.simple_game_introduction()
            
            change_page_by_event = self.game_obj.game_events_handler()

            self.input_boxes_control()

            if change_page_by_action or change_page_by_event:
                break

            pygame.display.update()
